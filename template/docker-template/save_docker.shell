#!/bin/bash

# Set Docker image name
DOCKER_IMAGE_NAME="your_docker_name"

echo "Building Docker image..."
docker build -t $DOCKER_IMAGE_NAME .

echo "Running Docker container..."
CONTAINER_ID=$(docker run -d $DOCKER_IMAGE_NAME)

echo "Docker container ID: $CONTAINER_ID"

# Wait for a certain period to ensure the container is running (adjust the sleep time as needed)
sleep 10

OUTPUT_DIR="./output"
mkdir -p $OUTPUT_DIR

echo "Copying JSON files from Docker container to host..."
docker cp $CONTAINER_ID:/root/.config/unity3d/RCareWorld/BathingPlayer/spongeScore.json $OUTPUT_DIR/BathingScore.json
docker cp $CONTAINER_ID:/root/.config/unity3d/RCareWorld/DressingPlayer/dressingScore.json $OUTPUT_DIR/DressingScore.json

echo "Echoing JSON file contents..."
echo "Contents of BathingScore.json:"
cat $OUTPUT_DIR/BathingScore.json
echo "Contents of DressingScore.json:"
cat $OUTPUT_DIR/DressingScore.json

echo "Done. JSON files are saved in the $OUTPUT_DIR directory."

# Keep the container running
echo "Entering Docker container's bash shell..."
docker exec -it $CONTAINER_ID /bin/bash

echo "Waiting for the Docker container to finish..."
docker wait $CONTAINER_ID

echo "Cleaning up Docker container..."
docker rm $CONTAINER_ID

echo "Echoing JSON file contents..."
if [ -f "$OUTPUT_DIR/BathingScore.json" ]; then
    echo "Contents of BathingScore.json:"
    cat $OUTPUT_DIR/BathingScore.json
else
    echo "BathingScore.json not found in output directory."
fi

if [ -f "$OUTPUT_DIR/DressingScore.json" ]; then
    echo "Contents of DressingScore.json:"
    cat $OUTPUT_DIR/DressingScore.json
else
    echo "DressingScore.json not found in output directory."
fi

echo "Saving Docker image to tar file..."
docker save -o your_docker_name.tar $DOCKER_IMAGE_NAME

echo "Compressing Docker image to zip file..."
zip your_docker_name.zip your_docker_name.tar

echo "Cleaning up tar file..."
rm your_docker_name.tar

echo "Done. JSON files are saved in the $OUTPUT_DIR directory and Docker image is saved as your_docker_name.zip."
